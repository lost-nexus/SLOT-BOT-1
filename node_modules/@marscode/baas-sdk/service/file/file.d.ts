/// <reference types="node" />
/// <reference types="node" />
import { IFileInfo, IFileListParam, IFileListResult } from "../../common/structs/file";
import { Stream } from "stream";
export interface IUploadOptions {
    /**
     * Pre-signature timeout, in milliseconds. Default is 10000.
     */
    preSignTimeout?: number;
    /**
     * Upload timeout, in milliseconds. Default is 10000.
     */
    uploadTimeout?: number;
}
export interface IApiOptions {
    /**
     * Request timeout, in milliseconds. Default is 10000.
     */
    timeout?: number;
}
export interface IDownloadOptions {
    /**
     * Query timeout, in milliseconds. Default is 10000.
     */
    queryTimeout?: number;
    /**
     * Download timeout, in milliseconds. Default is 10000.
     */
    downloadTimeout?: number;
}
export interface IFile {
    /**
     * File upload. Upload files to the BaaS service. The URL generated by the file you upload can be publicly accessed, please be careful of possible information leakage.
     * @param fileName File name
     * @param content File content, type: string
     * @param options Parameters
     */
    upload(fileName: string, content: string | Stream, options?: IUploadOptions): Promise<IFileInfo>;
    /**
     * File download
     * @param fileID File ID, type: string
     * @param options Parameters
     */
    download(fileID: string, options?: IDownloadOptions): Promise<Buffer>;
    /**
     * File delete
     * @param fileIds List of file IDs, type: string list
     * @param options Parameters
     */
    delete(fileIds: string[], options?: IApiOptions): Promise<void>;
    /**
     * File list
     * @param param Parameters
     * @param options Parameters
     */
    list(param: IFileListParam, options?: IApiOptions): Promise<IFileListResult>;
}
