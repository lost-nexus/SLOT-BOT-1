/// <reference types="node" />
/// <reference types="node" />
import { Stream } from "stream";
import { TimeoutKeys } from "../../redis/redis";
export interface IGetTokenReq {
    resourceID: string;
    secret: string;
}
export interface IGetTokenResp {
    token: string;
    expireSecond: number;
}
export interface IUploadOptions {
}
export interface IFileInfo {
    ID: string;
    Name: string;
    Size: number;
    URL: string;
    CreatedAt: number;
    UpdatedAt: number;
}
export interface IPreSignReq {
    name: string;
    checkSumMD5?: string;
    size?: number;
    timeout?: number;
}
export interface IPreSignResp {
    URL: string;
    AdditionalHeader: Record<string, string>;
    File: IFileInfo;
}
export interface IUploadReq {
    content: Stream | Buffer;
    fileName: string;
    url: string;
    additionalHeader?: Record<string, string>;
    timeout?: number;
}
export interface IDownloadReq {
    url: string;
    timeout?: number;
}
export interface IDownloadResp {
    content: Buffer;
}
export interface IDeleteReq {
    fileIDs: string[];
    timeout?: number;
}
export interface IGetFileByIDReq {
    fileID: string;
    timeout?: number;
}
export interface IGetFileByIDResp {
    File: IFileDesc;
}
export interface IFileListReq {
    pageSize: number;
    pageNumber: number;
    prefix: string;
    timeout?: number;
}
export interface IFileListResp {
    Paginate: IPaginate;
    Data: IFileDesc[];
}
export interface IPaginate {
    PageSize: number;
    PageNumber: number;
    TotalCount: number;
}
export interface IFileDesc {
    ID: string;
    Name: string;
    URL: string;
    Size: number;
    CreatedAt: number;
    UpdatedAt: number;
}
export interface IExecuteCmdReq {
    cmd: string;
    args: string[];
    options?: {
        [K in TimeoutKeys]?: number;
    };
}
export interface IExecuteCmdResp {
    JSONStrType: string;
    JSONStr: string;
}
